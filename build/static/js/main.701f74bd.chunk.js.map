{"version":3,"sources":["components/FanSignUp.js","components/TalentSignUp.js","components/TabView.js","components/containers/FormContainer.js","App.js","index.js"],"names":["FanSignUp","useState","changable","setChangable","currentButtonClick","setCurrentButtonClick","validationSchema","Yup","shape","firstName","min","max","matches","required","lastName","userName","email","password","className","initialValues","onSubmit","fields","setStatus","setSubmitting","axios","post","then","e","console","log","Swal","fire","title","confirmButtonText","result","window","location","reload","catch","error","createUser","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","style","width","border","backgroundColor","borderRadius","name","placeHolder","type","color","component","onClick","textAlign","FormControlLabel","control","Checkbox","label","disabled","variant","TalentSignUp","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","Typography","a11yProps","TabView","React","setValue","borderBottom","borderColor","Tabs","onChange","event","newValue","centered","Tab","FormContainer","Container","maxWidth","bgcolor","height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.701f74bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport * as Yup from \"yup\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { InputAdornment } from \"@mui/material\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from 'axios'\nimport Button from '@mui/material/Button';\nimport Swal from \"sweetalert2\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nexport default function FanSignUp() {\n\n  const [changable, setChangable] = useState(true);\n  const [currentButtonClick, setCurrentButtonClick] = useState(true)\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \").required(\"First Name is required\"),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \").required(\"Last Name is required\"),\n    userName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required(\"Username is required\"),\n    email: Yup.string().email('Email is invalid').required(\"Email is required\"),\n    password: Yup.string().matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n    ).required(\"Password Prerequisites is required\")\n  });\n\n  const baseURL = \"http://wren.in:3200/api/sign-up/fan\"\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    userName: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  function createUser(fields, setSubmitting) {\n    axios.post(baseURL, { fields })\n      .then((e) => {\n        console.log(\"data saved == \", e)\n        Swal.fire({\n          title: \"Data saved Successfully\",\n          confirmButtonText: \"Okay\",\n        }).then((result) => {\n          window.location.reload(false)\n        });\n      })\n      .catch((error) => {\n        Swal.fire(\"Oops...\", \"Something went wrong\", \"error\").then((result) => {\n          window.location.reload(false)\n        });\n      });\n  }\n  \n  function onSubmit(fields, { setStatus, setSubmitting }) {   \n    const data = { ...fields };\n    createUser(data, setSubmitting);\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <Formik          \n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n          enableReinitialize\n        >\n          {({ errors, values, touched, isSubmitting, setFieldValue }) => {\n            return (\n              <Form>\n                <>\n                  <div className=\"row mt-5\">\n                    <div className=\"form-group col-md-12\">\n                      <p className=\"text-center\"><b>Create Your Fan Account</b></p>\n                      <label>First Name</label>\n                      <br />\n                      <Field\n                        style={{ width: \"100%\", border: \"none\", backgroundColor: \"#808080\", borderRadius: \"1rem\", border: \"3px solid green\", }}\n                        name=\"firstName\"\n                        placeHolder=\"First Name\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.firstName && touched.firstName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"firstName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group col-md-12\">\n                      <label>Last Name</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"lastName\"\n                        placeHolder=\"Last Name\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.lastName && touched.lastName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"lastName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Username</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"userName\"\n                        placeHolder=\"UserName\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.userName && touched.userName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"userName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group col-12\">\n                      <label>Email</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"email\"\n                        placeHolder=\"Email\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.email && touched.email\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />\n                      <ErrorMessage\n                      name=\"email\"\n                      style={{ color: 'red' }}\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />   \n                    </div>\n                                     \n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group col-12\">\n                      <label>Password</label>\n                      <div className=\"d-flex\">\n                      <div className=\"col-md-10 p-0\">\n                        <Field\n                          style={{ width: \"100%\", border: \"none\", backgroundColor: \"#808080\", borderRadius: \"1rem\", border: \"3px solid green\", }}\n                          name=\"password\"\n                          placeHolder=\"Password\"\n                          type={changable ? 'password' : 'text'}\n                          className={\n                            \"form-control\" +\n                            (errors.password && touched.password\n                              ? \" is-invalid\"\n                              : \"\")\n                          }\n                        />\n                        <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                      </div>\n                      <div className=\"col-md-2 align-self-center\">\n                        <label onClick={() => {\n                          setChangable(!changable)\n                        }}>\n                          {changable ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </label>\n                      </div>\n                      </div>\n                      \n                    </div>\n                  </div>\n                  <div className=\"row\">&nbsp;</div>\n                  <div style={{ textAlign: \"center\" }}>\n                    <FormControlLabel\n                      control={<Checkbox name=\"checkedA\" onClick={() => {\n                        setCurrentButtonClick(!currentButtonClick)\n                      }} />}\n                      label=\"I accept the terms and conditions.\"\n                    />\n                  </div>\n                  <div className=\"row\">&nbsp;</div>\n                      <div className=\"col-md-12 text-center\">\n                        <button disabled={currentButtonClick}\n                          className=\"btn btn-success\"\n                          type=\"submit\" variant=\"contained\" color=\"success\">Sign Up</button>\n                    </div>\n                  {/* <button\n                          disabled={currentButtonClick}\n                          className=\"btn btn-primary\"\n                          type=\"submit\"\n                        >\n                          {isSubmitting && (\n                            <span className=\"spinner-border spinner-border-sm \"></span>\n                          )}\n                          Save\n                        </button> */}\n                  &nbsp; &nbsp; &nbsp;\n\n\n                </>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport Swal from \"sweetalert2\";\n\nexport default function TalentSignUp() {\n    const [changable, setChangable] = useState(true);\n    const [currentButtonClick, setCurrentButtonClick] = useState(true)\n    const baseURL = \"http://wren.in:3200/api/sign-up/talent\"\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \").required(\"First Name is required\"),\n        lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!') .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \").required(\"Last Name is required\"),\n        userName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required(\"Username is required\"),\n        email: Yup.string().email('Email is invalid').required(\"Email is required\"),\n        password: Yup.string().matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n          ).required(\"Password Prerequisites is required\")       \n      });\n     \n      const initialValues = {\n        firstName:  \"\",\n        lastName:  \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\"        \n      };\n\n      function createUser(fields, setSubmitting) { \n        axios.post(baseURL,{fields})        \n        .then((e) => {\n          console.log(\"data saved == \",e)\n          Swal.fire({\n           title: \"Data saved Successfully\",\n           confirmButtonText: \"Okay\",\n         }).then((result) => {\n           window.location.reload(false)\n         });\n         })\n         .catch((error) => {\n           Swal.fire(\"Oops...\", \"Something went wrong\", \"error\").then((result) => {\n             window.location.reload(false)\n           });\n         });\n      }\n\n      function onSubmit(fields, { setStatus, setSubmitting }) {   \n          console.log(\"fields == \",fields)        \n          const data = { ...fields};          \n          createUser(data, setSubmitting);          \n      }\n    return (\n        <>\n         <div className=\"container\">\n        <Formik          \n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n          enableReinitialize\n        >\n          {({ errors, values, touched, isSubmitting, setFieldValue }) => {\n            return (\n              <Form>\n                <>\n                  <div className=\"row mt-5\">\n                    <div className=\"form-group col-md-12\">\n                      <p className=\"text-center\"><b>Create Your Talent Account</b></p>\n                      <label>First Name</label>\n                      <br />\n                      <Field\n                        style={{ width: \"100%\", border: \"none\", backgroundColor: \"#808080\", borderRadius: \"1rem\", border: \"3px solid green\", }}\n                        name=\"firstName\"\n                        placeHolder=\"First Name\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.firstName && touched.firstName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"firstName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group col-md-12\">\n                      <label>Last Name</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"lastName\"\n                        placeHolder=\"Last Name\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.lastName && touched.lastName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"lastName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Username</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"userName\"\n                        placeHolder=\"UserName\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.userName && touched.userName\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />                      \n                      <ErrorMessage\n                        name=\"userName\"\n                        style={{ color: 'red' }}\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group col-12\">\n                      <label>Email</label>\n                      <br />                      \n                      <Field\n                        style={{ width: \"100%\", backgroundColor: \"#808080\", border: \"none\", border: \"3px solid green\", borderRadius: \"1rem\" }}\n                        name=\"email\"\n                        placeHolder=\"Email\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.email && touched.email\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />\n                      <ErrorMessage\n                      name=\"email\"\n                      style={{ color: 'red' }}\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />   \n                    </div>\n                                     \n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group col-12\">\n                      <label>Password</label>\n                      <div className=\"d-flex\">\n                      <div className=\"col-md-10 p-0\">\n                        <Field\n                          style={{ width: \"100%\", border: \"none\", backgroundColor: \"#808080\", borderRadius: \"1rem\", border: \"3px solid green\", }}\n                          name=\"password\"\n                          placeHolder=\"Password\"\n                          type={changable ? 'password' : 'text'}\n                          className={\n                            \"form-control\" +\n                            (errors.password && touched.password\n                              ? \" is-invalid\"\n                              : \"\")\n                          }\n                        />\n                        <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                      </div>\n                      <div className=\"col-md-2 align-self-center\">\n                        <label onClick={() => {\n                          setChangable(!changable)\n                        }}>\n                          {changable ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </label>\n                      </div>\n                      </div>\n                      \n                    </div>\n                  </div>\n                  <div className=\"row\">&nbsp;</div>\n                  <div style={{ textAlign: \"center\" }}>\n                    <FormControlLabel\n                      control={<Checkbox name=\"checkedA\" onClick={() => {\n                        setCurrentButtonClick(!currentButtonClick)\n                      }} />}\n                      label=\"I accept the terms and conditions.\"\n                    />\n                  </div>\n                  <div className=\"row\">&nbsp;</div>\n                      <div className=\"col-md-12 text-center\">\n                        <button disabled={currentButtonClick}\n                          className=\"btn btn-success\"\n                          type=\"submit\" variant=\"contained\" color=\"success\">Sign Up</button>\n                    </div>\n                  {/* <button\n                          disabled={currentButtonClick}\n                          className=\"btn btn-primary\"\n                          type=\"submit\"\n                        >\n                          {isSubmitting && (\n                            <span className=\"spinner-border spinner-border-sm \"></span>\n                          )}\n                          Save\n                        </button> */}\n                  &nbsp; &nbsp; &nbsp;\n\n\n                </>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n        </>\n    )\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport FanSignUp from './FanSignUp';\nimport TalentSignUp from './TalentSignUp';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabView() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%'}}>\n\n      <Box sx={{ borderBottom: 0, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" centered>\n          <Tab label=\"Fan signUp\" {...a11yProps(0)} />\n          <Tab label=\"Talent signUp\" {...a11yProps(1)} />          \n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <FanSignUp/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TalentSignUp/>\n      </TabPanel>      \n    </Box>\n  );\n}","import React from 'react'\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Tabs from '../TabView';\nexport default function FormContainer() {\n    return (\n        <>            \n            <Container maxWidth=\"sm\">\n                <Box sx={{ bgcolor: '#808080', height: '100vh', width:\"100%\" }}>\n                    <Tabs/>\n                </Box>\n            </Container>            \n        </>\n    )\n}\n","import './App.css';\nimport SignUpFormContainer from './components/containers';\nimport FormContainer from './components/containers/FormContainer';\n\nfunction App() {\n  return (\n    <div className=\"customBack\">\n      <FormContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}